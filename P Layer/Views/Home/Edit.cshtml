@using P_Layer.Models
@model P_Layer.Models.PersonModel

@{
    List<PersonModel> partner = ViewBag.Partner;
    List<PersonModel> men = ViewBag.Men;
    List<PersonModel> women = ViewBag.Women;

    List<SelectListItem> fathers = men.Select(a => new SelectListItem()
    {
        Value = a.Id.ToString(),
        Text = $"{a.Surname} {a.Name}, {a.BirthDate?.ToShortDateString() ?? ""}"
    }).ToList();
    fathers.Add(new SelectListItem()
    {
        Value = Model.FatherId == null ? "nothing" : Model.FatherId.ToString(),
        Text = "(without changes)",
        Selected = true
    });

    List<SelectListItem> mothers = women.Select(a => new SelectListItem()
    {
        Value = a.Id.ToString(),
        Text = $"{a.Surname} {a.Name}, {a.BirthDate?.ToShortDateString() ?? ""}"
    }).ToList();

    mothers.Add(new SelectListItem()
    {
        Value = Model.MotherId == null ? "nothing" : Model.MotherId.ToString(),
        Text = "(without changes)",
        Selected = true
    });

    List<SelectListItem> partners = partner.Select(a => new SelectListItem()
    {
        Value = a.Id.ToString(),
        Text = $"{a.Surname} {a.Name}, {a.BirthDate?.ToShortDateString() ?? ""}"
    }).ToList();

    partners.Add(new SelectListItem()
    {
        Value = Model.PartnerId == null ? "nothing" : Model.PartnerId.ToString(),
        Text = "(without changes)",
        Selected = true
    });

}


<a href="@Url.Action("Table")"><input type="submit" class="button" value="Back to List" /></a>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h1>Edit person</h1>
    <hr />
    @Html.ValidationSummary("", new { @class = "error_msg" })

    <h2>
        @Html.LabelFor(model => model.Name)
    </h2>
    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "settings_input" } })

    <h2>
        @Html.LabelFor(model => model.Surname)
    </h2>
    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "settings_input" } })

    <h2>
        @Html.LabelFor(model => model.IsMale)?
    </h2>
    <div class="checkbox">
        @Html.EditorFor(model => model.IsMale)
    </div>

    <h2>
        Birth Date:
    </h2>
    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "settings_input", @type = "date" } })
    
    <h2>
        Death Date:
    </h2>
    @Html.EditorFor(model => model.DeathDate, new { htmlAttributes = new { @class = "settings_input", @type = "date" } })

    <h2>
        Mother:
    </h2>
    @Html.DropDownListFor(model => model.MotherId, mothers, new { @class = "settings_input_dropdown" })
    @Html.ActionLink("Remove mother", "RemoveMother", new { id = Model.Id, action = "Edit" })

    <h2>
        Father:
    </h2>
    @Html.DropDownListFor(model => model.FatherId, fathers, new { @class = "settings_input_dropdown" })
    @Html.ActionLink("Remove father", "RemoveFather", new {id = Model.Id, action = "Edit"})

    <h2>
        Partner:
    </h2>
    @Html.DropDownListFor(model => model.PartnerId, partners, new { @class = "settings_input_dropdown" })
    @Html.ActionLink("Remove partner", "RemovePartner", new { id = Model.Id, action = "Edit" })
    <br />
    <input type="submit" value="Edit" class="button" />
}
